{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Titans-Devs Authors Haven",
    "description": "A Social platform for the creative at heart",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "host": "localhost:3000",
  "basePath": "/api/v1",
  "tags": [
    {
      "name": "Users",
      "description": "API for users in the system"
    }
  ],
  "schemes": ["http"],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "paths": {
    "/users": {
      "post": {
        "tags": ["Users"],
        "description": "Create new user in system",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User that we want to create",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "New user is created",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      },
      "get": {
        "tags": ["Users"],
        "summary": "Get all users in system",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Users"
            }
          }
        }
      }
    },
    "/users/{userId}": {
      "parameters": [
        {
          "name": "userId",
          "in": "path",
          "required": true,
          "description": "ID of user that we want to find",
          "type": "string"
        }
      ],
      "get": {
        "tags": ["Users"],
        "summary": "Get user with given ID",
        "responses": {
          "200": {
            "description": "User is found",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete user with given ID",
        "tags": ["Users"],
        "responses": {
          "200": {
            "description": "User is deleted",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      },
      "put": {
        "summary": "Update user with given ID",
        "tags": ["Users"],
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User with new values of properties",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User is updated",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "summary": "User login",
        "tags": ["Users"],
        "consumes": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "user",
            "description": "Allows a user to login.",
            "schema": {
              "type": "object",
              "required": ["email", "password"],
              "properties": {
                "email": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "User logged in successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                },
                "token": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Invalid email or password"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/articles": {
      "post": {
        "tags": ["Articles"],
        "summary": "Create an article",
        "description": "This helps the user to create a new article",
        "parameters": [
          {
            "name": "article",
            "in": "body",
            "description": "Article properties",
            "schema": {
              "$ref": "#/definitions/Article"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "CREATED",
            "schema": {
              "$ref": "#/definitions/Article"
            }
          }
        }
      },
      "get": {
        "tags": ["Articles"],
        "summary": "Get created articles",
        "description": "This helps the user to fetch all the created articles",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Article"
            }
          }
        }
      }
    },
    "/articles/{slug}": {
      "put": {
        "tags": ["Articles"],
        "summary": "Update an article",
        "description": "This helps the author to update their article",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "required": true,
            "description": "Article slug property",
            "schema": {
              "$ref": "#/definitions/Article"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "CREATED",
            "schema": {
              "$ref": "#/definitions/Article"
            }
          }
        }
      },
      "delete": {
        "tags": ["Articles"],
        "summary": "Delete an article",
        "description": "This helps the author to delete their article",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "required": true,
            "description": "Article slug property",
            "schema": {
              "$ref": "#/definitions/Article"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "CREATED",
            "schema": {
              "$ref": "#/definitions/Article"
            }
          }
        }
      }
    },
    "/articles/{slug}/comments/{commentID}/likes": {
      "post": {
        "tags": ["Articles"],
        "summary": "Like a specific comment",
        "description": "This allows a user to like a specific comment on article.",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "required": true,
            "description": "slug to represent a particular article",
            "type": "string"
          },
          {
            "name": "commentID",
            "in": "path",
            "required": true,
            "description": "ID for a comment we want to like",
            "type": "string"
          },
          {
            "name": "token",
            "in": "header",
            "required": true,
            "description": "A user has to provide the token in order to like a comment",
            "type": "string"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "comment liked successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                },
                "comment": {
                  "type": "object",
                  "properties": {
                    "body": {
                      "type": "string"
                    },
                    "like": {
                      "type": "integer"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updateddAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "likedBy": {
                      "type": "object"
                    },
                    "userId": {
                      "type": "string"
                    },
                    "articleId": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad request"
          },
          "401": {
            "description": "unauthorized request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/articles/{slug}/comments/{commentID}": {
      "put": {
        "tags": ["Articles"],
        "summary": "update a specific comment",
        "description": "This allows a user to update a specific comment.",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "required": true,
            "description": "slug to represent a particular article",
            "type": "string"
          },
          {
            "name": "commentID",
            "in": "path",
            "required": true,
            "description": "ID for a comment they want to update",
            "type": "string"
          },
          {
            "name": "token",
            "in": "header",
            "required": true,
            "description": "A user has to provide the token in order to update a comment",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Article properties",
            "schema": {
              "$ref": "#/definitions/Article"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "201": {
            "description": "comment updated successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                },
                "comment": {
                  "type": "object",
                  "properties": {
                    "body": {
                      "type": "string"
                    },
                    "like": {
                      "type": "integer"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updateddAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "likedBy": {
                      "type": "object"
                    },
                    "userId": {
                      "type": "string"
                    },
                    "articleId": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad request"
          },
          "401": {
            "description": "unauthorized request"
          },
          "404": {
            "description": "resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "tags": ["Articles"],
        "summary": "delete a specific comment",
        "description": "This allows a user to delete a specific comment.",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "required": true,
            "description": "slug to represent a particular article",
            "type": "string"
          },
          {
            "name": "commentID",
            "in": "path",
            "required": true,
            "description": "ID for a comment they want to update",
            "type": "string"
          },
          {
            "name": "token",
            "in": "header",
            "required": true,
            "description": "A user has to provide the token in order to update a comment",
            "type": "string"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "comment updated successfully"
          },
          "400": {
            "description": "bad request"
          },
          "401": {
            "description": "unauthorized request"
          },
          "404": {
            "description": "resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "get": {
        "tags": ["Articles"],
        "summary": "get a specific comment",
        "description": "This allows a user to get a specific comment.",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "required": true,
            "description": "slug to represent a particular article",
            "type": "string"
          },
          {
            "name": "commentID",
            "in": "path",
            "required": true,
            "description": "ID for a comment they want to get",
            "type": "string"
          },
          {
            "name": "token",
            "in": "header",
            "required": true,
            "description": "A user has to provide the token in order to get a comment",
            "type": "string"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "CREATED"
          },
          "400": {
            "description": "bad request"
          },
          "401": {
            "description": "unauthorized request"
          },
          "404": {
            "description": "resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/articles/{slug}/comments/{commentID}/history": {
      "get": {
        "tags": ["Articles"],
        "summary": "get a specific comment history",
        "description": "This allows a user to get a specific comment history.",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "required": true,
            "description": "slug to represent a particular article",
            "type": "string"
          },
          {
            "name": "commentID",
            "in": "path",
            "required": true,
            "description": "ID for a comment they want to get",
            "type": "string"
          },
          {
            "name": "token",
            "in": "header",
            "required": true,
            "description": "A user has to provide the token in order to get a comment",
            "type": "string"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "bad request"
          },
          "401": {
            "description": "unauthorized request"
          },
          "404": {
            "description": "resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/articles/{slug}/comments": {
      "get": {
        "tags": ["Articles"],
        "summary": "get comments for a specific article",
        "description": "This allows a user to get article with comments.",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "required": true,
            "description": "slug to represent a particular article",
            "type": "string"
          },
          {
            "name": "token",
            "in": "header",
            "required": true,
            "description": "A user has to provide the token in order to get an article with its comments",
            "type": "string"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "bad request"
          },
          "401": {
            "description": "unauthorized request"
          },
          "404": {
            "description": "resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "definitions": {
      "User": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string"
              }
            }
          }
        }
      },
      "Users": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "firstName": {
              "type": "string"
            }
          }
        }
      },
      "Article": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "An American ate the African chicken"
          },
          "body": {
            "type": "string",
            "example": "Ever wonder how the guy got his pocket empty because of the meal?"
          },
          "description": {
            "type": "string",
            "example": "'It was so delicious'. said the white man who ate the African chicken for his first time in Rwanda."
          },
          "tagsList": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "javaScript"
            }
          }
        },
        "commnents": {
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      }
    }
  }
}
